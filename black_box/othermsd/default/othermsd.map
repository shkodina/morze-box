Archive member included because of file (symbol)

c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                              c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o (exit)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                              mmc-spi.o (__do_copy_data)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                              mmc-spi.o (__do_clear_bss)
c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
                              mmc-spi.o (memset)

Allocating common symbols
Common symbol       size              file

message             0x100             mmc-spi.o
mmc_cmd             0x6               mmc-spi.o
mmc_block           0x200             mmc-spi.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
LOAD spi.o
LOAD mmc-spi.o
LOAD othermsd.o
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a
LOAD c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x5d8
 *(.vectors)
 .vectors       0x00000000       0x26 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_9
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e       0x9a spi.o
                0x0000005e                spi_init
                0x0000006e                spi_send_byte
                0x00000076                spi_receive_byte
                0x00000082                spi_send_receive_byte
                0x0000008c                spi_send
                0x000000c2                spi_receive
 .text          0x000000f8      0x4ce mmc-spi.o
                0x00000110                init_abc
                0x0000015a                init_message
                0x000001ca                check_block
                0x000002fc                signal
                0x00000332                morze_char
                0x000003ae                morze_message
                0x0000042a                mmc_response
                0x0000044e                mmc_init
                0x00000514                mmc_read_block
                0x0000057a                main
 .text          0x000005c6        0x0 othermsd.o
 .text          0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text          0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text          0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .text          0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
                0x000005c6                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x000005c6        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000005c6        0xe c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
                0x000005c6                memset
                0x000005d4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000005d4        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
                0x000005d4                _exit
                0x000005d4                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000005d4        0x4 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x000005d8                _etext = .

.data           0x00800060       0x7c load address 0x000005d8
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 spi.o
 .data          0x00800060       0x7c mmc-spi.o
                0x00800060                PointTime
 .data          0x008000dc        0x0 othermsd.o
 .data          0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .data          0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .data          0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .data          0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x008000dc                . = ALIGN (0x2)
                0x008000dc                _edata = .
                0x008000dc                PROVIDE (__data_end, .)

.bss            0x008000dc      0x306
                0x008000dc                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .bss           0x008000dc        0x0 spi.o
 .bss           0x008000dc        0x0 mmc-spi.o
 .bss           0x008000dc        0x0 othermsd.o
 .bss           0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_exit.o)
 .bss           0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/avr4\libgcc.a(_clear_bss.o)
 .bss           0x008000dc        0x0 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000dc      0x306 mmc-spi.o
                0x008000dc                message
                0x008001dc                mmc_cmd
                0x008001e2                mmc_block
                0x008003e2                PROVIDE (__bss_end, .)
                0x000005d8                __data_load_start = LOADADDR (.data)
                0x00000654                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008003e2        0x0
                0x008003e2                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008003e2                PROVIDE (__noinit_end, .)
                0x008003e2                _end = .
                0x008003e2                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x738
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o
 .stab          0x000006cc       0x6c c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4\libc.a(memset.o)
                                 0x78 (size before relaxing)

.stabstr        0x00000000       0xe7
 *(.stabstr)
 .stabstr       0x00000000       0xe7 c:/program files/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.5.1/../../../../avr/lib/avr4/crtm8.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 spi.o
 .debug_aranges
                0x00000020       0x20 mmc-spi.o

.debug_pubnames
                0x00000000      0x157
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x7d spi.o
 .debug_pubnames
                0x0000007d       0xda mmc-spi.o

.debug_info     0x00000000      0xa81
 *(.debug_info)
 .debug_info    0x00000000      0x1b1 spi.o
 .debug_info    0x000001b1      0x8d0 mmc-spi.o
 .debug_info    0x00000a81        0x0 othermsd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x3aa
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xdf spi.o
 .debug_abbrev  0x000000df      0x2ca mmc-spi.o
 .debug_abbrev  0x000003a9        0x1 othermsd.o

.debug_line     0x00000000      0x97d
 *(.debug_line)
 .debug_line    0x00000000      0x1b6 spi.o
 .debug_line    0x000001b6      0x7a3 mmc-spi.o
 .debug_line    0x00000959       0x24 othermsd.o

.debug_frame    0x00000000      0x130
 *(.debug_frame)
 .debug_frame   0x00000000       0x70 spi.o
 .debug_frame   0x00000070       0xc0 mmc-spi.o

.debug_str      0x00000000      0x289
 *(.debug_str)
 .debug_str     0x00000000       0xe4 spi.o
                                0x122 (size before relaxing)
 .debug_str     0x000000e4      0x1a5 mmc-spi.o
                                0x27c (size before relaxing)

.debug_loc      0x00000000      0x7ae
 *(.debug_loc)
 .debug_loc     0x00000000      0x125 spi.o
 .debug_loc     0x00000125      0x689 mmc-spi.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(othermsd.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x74
 .debug_pubtypes
                0x00000000       0x2b spi.o
 .debug_pubtypes
                0x0000002b       0x49 mmc-spi.o

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 mmc-spi.o
